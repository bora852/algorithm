import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.util.StringTokenizer;
?
public class Solution {
?????
????static char[][] map;
????static boolean[] visited;
????static StringTokenizer st;
????static int R, C;
????public static void main(String[] args) throws Exception{
?????????
????????BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
????????int T = Integer.parseInt(br.readLine());
?????????
????????for(int tc = 1; tc <= T; tc++) {
????????????st = new StringTokenizer(br.readLine());
????????????R = Integer.parseInt(st.nextToken());
????????????C = Integer.parseInt(st.nextToken());
????????????map = new char[R][C];
?????????????
????????????for(int i = 0; i < R; i++) {
????????????????map[i] = br.readLine().toCharArray();
//????????????? System.out.println(Arrays.toString(map[i]));
????????????}
?????????????
????????????visited = new boolean[100];
????????????ans = Integer.MIN_VALUE;
????????????int value = map[0][0] - 'A';
????????????visited[value] = true;
?????????????
????????????solve(0, 0, 1);
?????????????
????????????System.out.println("#"+tc+" "+ans);
????????}
????}
?????
????static int[] dr = {-1, 1, 0, 0};
????static int[] dc = {0, 0, -1, 1};
????static int ans;
????static void solve(int r, int c, int cnt) {
????????for(int i = 0; i < 4; i++) {
????????????int nr = dr[i] + r;
????????????int nc = dc[i] + c;
?????????????
????????????if(0 <= nr && nr < map.length && 0 <= nc && nc < map[nr].length) {
????????????????int value = map[nr][nc] - 'A';
????????????????if(!visited[value]) {
????????????????????visited[value] = true;
????????????????????solve(nr, nc, cnt+1);
????????????????????visited[value] = false;
????????????????}
????????????}
????????}
????????if(cnt > ans) ans = cnt;
????}
?????
????static class Point{
????????int r;
????????int c;
????????Point(int r, int c){
????????????this.r = r;
????????????this.c = c;
????????}
????}
}