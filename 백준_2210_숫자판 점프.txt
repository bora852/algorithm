import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.util.Arrays;
import java.util.HashSet;
import java.util.StringTokenizer;

public class Main {
	static int[] dr = {-1, 1, 0, 0};
	static int[] dc = {0, 0, -1, 1};
	static StringTokenizer st;
	static int N = 5;
	static int[][] map;
	static HashSet<String> set;
	public static void main(String[] args) throws Exception{
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		map = new int[N][N];
		set = new HashSet<>();
		
		for(int i = 0; i < N; i++) {
			st = new StringTokenizer(br.readLine());
			for(int j = 0; j < N; j++) {
				map[i][j] = Integer.parseInt(st.nextToken());
			}
//			System.out.println(Arrays.toString(map[i]));
		}
		
		for(int i = 0; i < N; i++) {
			for(int j = 0; j < N; j++) {
				dfs(0, i, j, map[i][j]+"");
			}
		}
		
		System.out.println(set.size());
	}
	
	static void dfs(int cnt, int row, int col, String num) {
		
		if(cnt == 5) {
			set.add(num);
			return;
		}
		
		for(int k = 0; k < 4; k++) {
			int nr = dr[k] + row;
			int nc = dc[k] + col;
			
			if(0 <= nr && nr < N && 0 <= nc && nc < N) {
				dfs(cnt+1, nr, nc, num+map[nr][nc]);
			}
		}
		
	}
}
