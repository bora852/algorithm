import java.util.Arrays;
import java.util.Scanner;

public class Main {
	static int N; //컴퓨터 수
	static int E; //네트워크 상 컴퓨터 쌍
	static int[][] map;
	static int ans;
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		N = sc.nextInt();
		E = sc.nextInt();
		map = new int[N + 1][N + 1];
		for(int i = 1; i <= E; i++) {
			int a = sc.nextInt();
			int b = sc.nextInt();
			map[a][b] = 1;
			map[b][a] = 1;
		}
		
//		for(int i = 1; i <= N; i++) {
//			System.out.println(Arrays.toString(map[i]));
//		}
		ans = 0;
		visited = new boolean[N+1];
		dfs(1);
//		System.out.println(Arrays.toString(visited));
		System.out.println(ans);
	}
	
	static boolean[] visited;
	static void dfs(int idx) {
		visited[idx] = true;
		for(int i = 1; i <= N; i++) {
			if(map[idx][i] == 1 && !visited[i]) {
				ans++;
				dfs(i);
			}
		}
	}
}




package algo_0311;

import java.util.LinkedList;
import java.util.Queue;
import java.util.Scanner;

public class Virus_bfs {
	public static void main(String[] args) {
		Scanner sc = new Scanner("7\r\n" + 
				"6\r\n" + 
				"1 2\r\n" + 
				"2 3\r\n" + 
				"1 5\r\n" + 
				"5 2\r\n" + 
				"5 6\r\n" + 
				"4 7");
		
		int V = sc.nextInt(); //정점
		int E = sc.nextInt(); //간선
		
		int[][] map = new int[V+1][V+1];
		for(int i = 0; i < E; i++) {
			int a = sc.nextInt();
			int b = sc.nextInt();
			map[a][b] = 1;
		}

		int cnt = 0;
		boolean [] visited = new boolean[V+1];
		
		q = new LinkedList<>();
		q.add(1);
		visited[1] = true;
		bfs(V, visited, map);
		
		for(int i = 2; i < map.length; i++) {
			if(visited[i])
				cnt++;
		}
		System.out.println(cnt);
		
	}
	
	static Queue<Integer> q;
	
	static void bfs(int v, boolean[] visited, int[][] map) {
		while(!q.isEmpty()) {
			int c = q.poll();
			for(int i = 0; i < v; i++) {
				if(map[c][i]==1 && !visited[i]) {
					q.add(i);
					visited[i] = true;
				}
			}
		}
	}
}
